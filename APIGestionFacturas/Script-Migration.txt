IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(20) NOT NULL,
    [Email] nvarchar(50) NOT NULL,
    [Password] nvarchar(30) NOT NULL,
    [Rol] int NOT NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatedDate] datetime2 NOT NULL,
    [UpdatedBy] nvarchar(max) NULL,
    [UpdatedDate] datetime2 NULL,
    [DeletedBy] nvarchar(max) NULL,
    [DeletedDate] datetime2 NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [Enterprises] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(50) NOT NULL,
    [UserId] int NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatedDate] datetime2 NOT NULL,
    [UpdatedBy] nvarchar(max) NULL,
    [UpdatedDate] datetime2 NULL,
    [DeletedBy] nvarchar(max) NULL,
    [DeletedDate] datetime2 NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Enterprises] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Enterprises_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id])
);
GO

CREATE TABLE [Invoices] (
    [Id] int NOT NULL IDENTITY,
    [EnterpriseId] int NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatedDate] datetime2 NOT NULL,
    [UpdatedBy] nvarchar(max) NULL,
    [UpdatedDate] datetime2 NULL,
    [DeletedBy] nvarchar(max) NULL,
    [DeletedDate] datetime2 NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_Invoices] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Invoices_Enterprises_EnterpriseId] FOREIGN KEY ([EnterpriseId]) REFERENCES [Enterprises] ([Id])
);
GO

CREATE TABLE [InvoiceLines] (
    [Id] int NOT NULL IDENTITY,
    [Item] nvarchar(50) NOT NULL,
    [quantity] int NOT NULL,
    [ItemValue] real NOT NULL,
    [InvoiceId] int NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatedDate] datetime2 NOT NULL,
    [UpdatedBy] nvarchar(max) NULL,
    [UpdatedDate] datetime2 NULL,
    [DeletedBy] nvarchar(max) NULL,
    [DeletedDate] datetime2 NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_InvoiceLines] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_InvoiceLines_Invoices_InvoiceId] FOREIGN KEY ([InvoiceId]) REFERENCES [Invoices] ([Id])
);
GO

CREATE INDEX [IX_Enterprises_UserId] ON [Enterprises] ([UserId]);
GO

CREATE INDEX [IX_InvoiceLines_InvoiceId] ON [InvoiceLines] ([InvoiceId]);
GO

CREATE INDEX [IX_Invoices_EnterpriseId] ON [Invoices] ([EnterpriseId]);
GO

CREATE UNIQUE INDEX [IX_Users_Email] ON [Users] ([Email]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20221002065206_Creación de tablas de modelo', N'6.0.9');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [InvoiceLines] DROP CONSTRAINT [FK_InvoiceLines_Invoices_InvoiceId];
GO

ALTER TABLE [Invoices] DROP CONSTRAINT [FK_Invoices_Enterprises_EnterpriseId];
GO

EXEC sp_rename N'[InvoiceLines].[quantity]', N'Quantity', N'COLUMN';
GO

DROP INDEX [IX_Invoices_EnterpriseId] ON [Invoices];
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Invoices]') AND [c].[name] = N'EnterpriseId');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [Invoices] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [Invoices] ALTER COLUMN [EnterpriseId] int NOT NULL;
ALTER TABLE [Invoices] ADD DEFAULT 0 FOR [EnterpriseId];
CREATE INDEX [IX_Invoices_EnterpriseId] ON [Invoices] ([EnterpriseId]);
GO

ALTER TABLE [Invoices] ADD [Name] nvarchar(max) NOT NULL DEFAULT N'';
GO

ALTER TABLE [Invoices] ADD [TaxPercentage] int NOT NULL DEFAULT 0;
GO

DROP INDEX [IX_InvoiceLines_InvoiceId] ON [InvoiceLines];
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'InvoiceId');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [InvoiceLines] ALTER COLUMN [InvoiceId] int NOT NULL;
ALTER TABLE [InvoiceLines] ADD DEFAULT 0 FOR [InvoiceId];
CREATE INDEX [IX_InvoiceLines_InvoiceId] ON [InvoiceLines] ([InvoiceId]);
GO

ALTER TABLE [InvoiceLines] ADD CONSTRAINT [FK_InvoiceLines_Invoices_InvoiceId] FOREIGN KEY ([InvoiceId]) REFERENCES [Invoices] ([Id]) ON DELETE CASCADE;
GO

ALTER TABLE [Invoices] ADD CONSTRAINT [FK_Invoices_Enterprises_EnterpriseId] FOREIGN KEY ([EnterpriseId]) REFERENCES [Enterprises] ([Id]) ON DELETE CASCADE;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20221005020859_Cambio de relaciones del modelo', N'6.0.9');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DECLARE @var2 sysname;
SELECT @var2 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'CreatedBy');
IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var2 + '];');
ALTER TABLE [InvoiceLines] DROP COLUMN [CreatedBy];
GO

DECLARE @var3 sysname;
SELECT @var3 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'CreatedDate');
IF @var3 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var3 + '];');
ALTER TABLE [InvoiceLines] DROP COLUMN [CreatedDate];
GO

DECLARE @var4 sysname;
SELECT @var4 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'DeletedBy');
IF @var4 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var4 + '];');
ALTER TABLE [InvoiceLines] DROP COLUMN [DeletedBy];
GO

DECLARE @var5 sysname;
SELECT @var5 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'DeletedDate');
IF @var5 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var5 + '];');
ALTER TABLE [InvoiceLines] DROP COLUMN [DeletedDate];
GO

DECLARE @var6 sysname;
SELECT @var6 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'IsDeleted');
IF @var6 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var6 + '];');
ALTER TABLE [InvoiceLines] DROP COLUMN [IsDeleted];
GO

DECLARE @var7 sysname;
SELECT @var7 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'UpdatedBy');
IF @var7 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var7 + '];');
ALTER TABLE [InvoiceLines] DROP COLUMN [UpdatedBy];
GO

DECLARE @var8 sysname;
SELECT @var8 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[InvoiceLines]') AND [c].[name] = N'UpdatedDate');
IF @var8 IS NOT NULL EXEC(N'ALTER TABLE [InvoiceLines] DROP CONSTRAINT [' + @var8 + '];');
ALTER TABLE [InvoiceLines] DROP COLUMN [UpdatedDate];
GO

DECLARE @var9 sysname;
SELECT @var9 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Invoices]') AND [c].[name] = N'TaxPercentage');
IF @var9 IS NOT NULL EXEC(N'ALTER TABLE [Invoices] DROP CONSTRAINT [' + @var9 + '];');
ALTER TABLE [Invoices] ALTER COLUMN [TaxPercentage] real NOT NULL;
GO

ALTER TABLE [Invoices] ADD [TotalAmount] real NOT NULL DEFAULT CAST(0 AS real);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20221006222827_Actualización de factura y estructura de lineas de factura', N'6.0.9');
GO

COMMIT;
GO





-- #### Usuario administrador inicial para testeo ####

USE [DbGestionFacturas]
GO

INSERT INTO [dbo].[Users]
           ([Name]
           ,[Email]
           ,[Password]
	   ,[Rol]
           ,[CreatedBy]
           ,[CreatedDate]
	   ,[IsDeleted])
     VALUES
           ('admin'
           ,'admin@admin.com'
           ,'admin'
	   ,0
           ,'admin'
           ,GETDATE()
	   ,0)
GO
